<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.TUserMapper">
	<resultMap id="BaseResultMap" type="entity.TUser">

		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="real_name" property="realName" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="TINYINT" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="note" property="note" jdbcType="VARCHAR" />
		<result column="position_id" property="positionId" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="userJobMap" extends="BaseResultMap" type="entity.TUser">
		<collection property="jobs" ofType="entity.TJobHistory" >
			<result column="user_id" property="userId" jdbcType="INTEGER"></result>
			<result column="comp_name" property="compName" jdbcType="VARCHAR"></result>
			<result column="years" property="years" jdbcType="INTEGER"></result>
			<result column="title" property="title" jdbcType="VARCHAR"></result>
		</collection>
	</resultMap>

	<resultMap id="userJobMap2" extends="BaseResultMap" type="entity.TUser">
		<collection property="jobs" fetchType="lazy" column="id" select="mapper.TJobHistoryAnnoMapper.selectByUserId" >

		</collection>
	</resultMap>

<!--	<select id="selectAll" parameterType="java.lang.Integer" resultMap="BaseResultMap" >-->
<!--			select id, user_name, real_name, sex, mobile, email, note, position_id  from t_user-->
<!--			where id = #{id, jdbcType = INTEGER}-->
<!--	</select>-->

	<select id="selectAll" parameterType="java.lang.Integer" resultType="entity.TUser" >
			select id, user_name, real_name, sex, mobile, email, note, position_id  from t_user
			where id = #{id, jdbcType = INTEGER}
	</select>

	<insert id="insert1" parameterType="entity.TUser" useGeneratedKeys="true" keyProperty="id">
		insert into t_user(id, user_name, real_name, sex, mobile, email, note, position_id)
		values (#{id, jdbcType=INTEGER},
		#{userName, jdbcType=VARCHAR},
		#{realName, jdbcType=VARCHAR},
		#{sex, jdbcType=TINYINT},
		#{mobile, jdbcType=VARCHAR},
		#{email, jdbcType=VARCHAR},
		#{note, jdbcType=INTEGER}, #{positionId, jdbcType=INTEGER})
	</insert>

	<insert id="insert2" parameterType="entity.TUser">
		insert into t_user(id, user_name, real_name, sex, mobile, email, note, position_id)
		values (#{id, jdbcType=INTEGER},
		#{userName, jdbcType=VARCHAR},
		#{realName, jdbcType=VARCHAR},
		#{sex, jdbcType=TINYINT},
		#{mobile, jdbcType=VARCHAR},
		#{email, jdbcType=VARCHAR},
		#{note, jdbcType=INTEGER}, #{positionId, jdbcType=INTEGER})
	</insert>

	<insert id="insertIfOper" parameterType="entity.TUser">
		insert into t_user(
			<include refid="insertColumn"></include>
		)
		values (
			<include refid="valueColumn"></include>
		)
	</insert>


	<insert id="insertSelective" parameterType="entity.TUser">
		insert into t_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="insertColumn"></include>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<include refid="valueColumn"></include>
		</trim>

	</insert>

	<insert id="insertForeach4Batch" parameterType="java.util.List">
		insert into t_user
		<trim prefix="(" suffix=")">
			<include refid="selectColumn"></include>
		</trim>
		values
		<foreach collection="userList" separator="," item="user" >
			(
			#{user.id, jdbcType=INTEGER},
			#{user.userName, jdbcType=VARCHAR},
			#{user.realName, jdbcType=VARCHAR},
			#{user.sex, jdbcType=TINYINT},
			#{user.mobile, jdbcType=VARCHAR},
			#{user.email, jdbcType=VARCHAR},
			#{user.note, jdbcType=INTEGER},
			#{user.positionId, jdbcType=INTEGER}
			)
		</foreach>
	</insert>

	<update id="updateIfOper" parameterType="entity.TUser">
		update t_user
		<set>
			<include refid="updateColumn"></include>
		</set>
		where id = #{id, jdbcType=INTEGER}
	</update>


	<select id="selectById" resultType="entity.TUser" parameterType="java.lang.Integer">
		select
		<include refid="selectColumn"></include>
		from t_user
		where id = #{id, jdbcType=INTEGER}
	</select>

	<select id="selectUserJobs1" resultMap="userJobMap" parameterType="java.lang.Integer">
		select
		tu.id, tu.user_name, tu.real_name, tu.sex, tu.mobile, tu.email, tu.note, tu.position_id, tjh.user_id, tjh.comp_name, tjh.years, tjh.title
		from t_user tu
		inner  join t_job_history tjh on tu.id = tjh.user_id
	</select>

	<select id="selectUserJobs2" resultMap="userJobMap2" parameterType="java.lang.Integer">
		select
		<include refid="selectColumn"></include>
		from t_user
	</select>

	<sql id="insertColumn">
		<if test="id!=null">
			id,
		</if>
		<if test="userName!=null">
			user_name,
		</if>
		<if test="realName!=null">
			real_name,
		</if>
		<if test="sex!=null">
			sex,
		</if>
		<if test="mobile!=null">
			mobile,
		</if>
		<if test="email!=null">
			email,
		</if>
		<if test="note!=null">
			note,
		</if>
		<if test="positionId!=null">
			position_id
		</if>
	</sql>

	<sql id="valueColumn">
		<if test="id!=null">
			#{id, jdbcType=INTEGER},
		</if>
		<if test="userName!=null">
			#{userName, jdbcType=VARCHAR},
		</if>
		<if test="realName!=null">
			#{realName, jdbcType=VARCHAR},
		</if>
		<if test="sex!=null">
			#{sex, jdbcType=TINYINT},
		</if>
		<if test="mobile!=null">
			#{mobile, jdbcType=VARCHAR},
		</if>
		<if test="email!=null">
			#{email, jdbcType=VARCHAR},
		</if>
		<if test="note!=null">
			#{note, jdbcType=INTEGER},
		</if>
		<if test="positionId!=null">
			#{positionId, jdbcType=INTEGER}
		</if>
	</sql>

	<sql id="updateColumn">
		<if test="userName!=null">
			 user_name = #{userName, jdbcType=VARCHAR},
		</if>
		<if test="realName!=null">
			 real_name = #{realName, jdbcType=VARCHAR},
		</if>
		<if test="sex!=null">
			 sex = #{sex, jdbcType=TINYINT},
		</if>
		<if test="mobile!=null">
			 mobile = #{mobile, jdbcType=VARCHAR},
		</if>
		<if test="email!=null">
			 email = #{email, jdbcType=VARCHAR},
		</if>
		<if test="note!=null">
			 note = #{note, jdbcType=INTEGER},
		</if>
		<if test="positionId!=null">
			 positionId = #{positionId, jdbcType=INTEGER},
		</if>
	</sql>


	<sql id="updateColumnSelective">
		<if test="userName!=null">
			and user_name = #{userName, jdbcType=VARCHAR}
		</if>
		<if test="realName!=null">
			and real_name = #{realName, jdbcType=VARCHAR}
		</if>
		<if test="sex!=null">
			and sex = #{sex, jdbcType=TINYINT}
		</if>
		<if test="mobile!=null">
			and mobile = #{mobile, jdbcType=VARCHAR}
		</if>
		<if test="email!=null">
			and email = #{email, jdbcType=VARCHAR}
		</if>
		<if test="note!=null">
			and note = #{note, jdbcType=INTEGER}
		</if>
		<if test="positionId!=null">
			and positionId = #{positionId, jdbcType=INTEGER}
		</if>
	</sql>

	<sql id="selectColumn">
		id, user_name, real_name, sex, mobile, email, note, position_id
	</sql>
</mapper>